(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{368:function(e,o,t){"use strict";t.r(o);var a=t(44),i=Object(a.a)({},(function(){var e=this,o=e.$createElement,t=e._self._c||o;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"cli-references"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cli-references"}},[e._v("#")]),e._v(" CLI & references")]),e._v(" "),t("h2",{attrs:{id:"mookme-init"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mookme-init"}},[e._v("#")]),e._v(" "),t("code",[e._v("mookme init")])]),e._v(" "),t("p",[e._v("The main initialization command. It :")]),e._v(" "),t("ul",[t("li",[e._v("prompts for one or multiple packages folder path")]),e._v(" "),t("li",[e._v("asks you to select one or multiple package at each path")]),e._v(" "),t("li",[e._v("creates the "),t("code",[e._v(".hooks")]),e._v(" folder in each package where you can write "),t("strong",[e._v("dedicated hooks !")]),e._v(" that will be triggered only when changes in this package occur")]),e._v(" "),t("li",[e._v("creates a "),t("code",[e._v(".hooks")]),e._v(" folder at the root of your project where you can write "),t("strong",[e._v("project-wide hooks")]),e._v(" that will be triggered on every commit")]),e._v(" "),t("li",[e._v("writes "),t("code",[e._v(".git/hooks")]),e._v(" files")])]),e._v(" "),t("h3",{attrs:{id:"options"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#options"}},[e._v("#")]),e._v(" Options")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("--only-hook")]),e._v(" (optional)")])]),e._v(" "),t("p",[e._v("Skip prompters and only write "),t("code",[e._v(".git/hooks")]),e._v(" files. This is for installation in an already-configured project.")]),e._v(" "),t("h2",{attrs:{id:"mookme-run"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mookme-run"}},[e._v("#")]),e._v(" "),t("code",[e._v("mookme run")])]),e._v(" "),t("p",[e._v("Mainly used for debugging and dry run :")]),e._v(" "),t("p",[t("code",[e._v('mookme run --type pre-commit -a "test arguments"')])]),e._v(" "),t("h3",{attrs:{id:"options-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#options-2"}},[e._v("#")]),e._v(" Options")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("-t --type")]),e._v(" (required)")])]),e._v(" "),t("p",[e._v("The type of hook to run, has to be one of "),t("code",[e._v("pre-commit")]),e._v(", "),t("code",[e._v("prepare-commit-msg")]),e._v(", "),t("code",[e._v("commit-msg")]),e._v(", "),t("code",[e._v("post-commit")]),e._v(".")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("-a --args")]),e._v(" (optional)")])]),e._v(" "),t("p",[e._v("The arguments that would be normally passed by git to the hook")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("-r --run-all")]),e._v(" (optional)")])]),e._v(" "),t("p",[e._v("Skip the selection of hooks to run based on git-staged files, and run hooks of every package for this type")]),e._v(" "),t("h2",{attrs:{id:"hook-files"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#hook-files"}},[e._v("#")]),e._v(" Hook files")]),e._v(" "),t("p",[e._v("With "),t("code",[e._v("mookme")]),e._v(", your hooks are stored in JSON files called "),t("code",[e._v("{hook-type}.json")]),e._v(" where the hook type is one of the available git hooks, eg :")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("pre-commit")])]),e._v(" "),t("li",[t("code",[e._v("prepare-commit-msg")])]),e._v(" "),t("li",[t("code",[e._v("commit-msg")])]),e._v(" "),t("li",[t("code",[e._v("post-commit")])])]),e._v(" "),t("h3",{attrs:{id:"available-options"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#available-options"}},[e._v("#")]),e._v(" Available options")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("steps")])])]),e._v(" "),t("p",[e._v("The list of steps being executed by this hook")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("type")])])]),e._v(" "),t("p",[e._v("A flag used mainly to tell "),t("code",[e._v("mookme")]),e._v(" this is a python hook, and might need a virtual environment to be activated.")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("venvActivate")])])]),e._v(" "),t("p",[e._v("A path to a "),t("code",[e._v("<venv>/bin/activate")]),e._v(" script to execute before the command if the hook type is "),t("code",[e._v("python")])])])}),[],!1,null,null,null);o.default=i.exports}}]);